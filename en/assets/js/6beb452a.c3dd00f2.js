"use strict";(self.webpackChunke_motor_solution_doc=self.webpackChunke_motor_solution_doc||[]).push([[6460],{8453:(t,e,i)=>{i.d(e,{R:()=>o,x:()=>a});var s=i(6540);const n={},r=s.createContext(n);function o(t){const e=s.useContext(r);return s.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function a(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(n):t.components||n:o(t.components),s.createElement(r.Provider,{value:e},t.children)}},9920:(t,e,i)=>{i.r(e),i.d(e,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"api/Analyses/PMSM/PMSM_Static","title":"Static","description":"The PMSM_Static class is a specialized analysis for Permanent Magnet Synchronous Machines (PMSM) that calculates the Static response of the machine based on the initial conditions and operating parameters.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/api/Analyses/PMSM/PMSM_Static.md","sourceDirName":"api/Analyses/PMSM","slug":"/api/Analyses/PMSM/PMSM_Static","permalink":"/eMotorSolutionDoc/en/docs/api/Analyses/PMSM/PMSM_Static","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"Static"},"sidebar":"apiSidebar","previous":{"title":"Transient","permalink":"/eMotorSolutionDoc/en/docs/api/Analyses/PMSM/PMSM_Transient"}}');var n=i(4848),r=i(8453);const o={sidebar_position:3,title:"Static"},a="PMSM_Static Analysis",d={},c=[{value:"Methods",id:"methods",level:2},{value:"Attributes",id:"attributes",level:2}];function l(t){const e={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.header,{children:(0,n.jsx)(e.h1,{id:"pmsm_static-analysis",children:"PMSM_Static Analysis"})}),"\n",(0,n.jsxs)(e.p,{children:["The ",(0,n.jsx)(e.code,{children:"PMSM_Static"})," class is a specialized analysis for Permanent Magnet Synchronous Machines (PMSM) that calculates the Static response of the machine based on the initial conditions and operating parameters."]}),"\n",(0,n.jsxs)(e.p,{children:["The ",(0,n.jsx)(e.code,{children:"PMSM_Static"})," class inherits from the ",(0,n.jsx)(e.a,{href:"/docs/api/Analyses/InputControl",children:(0,n.jsx)(e.code,{children:"MS_InputControl"})})," base class, which provides common functionality for managing analysis input data. It is accessible through ",(0,n.jsx)(e.code,{children:"eMotorSolution.CheckPoints.Analysis.PMSM.Static.PMSM_Static"}),"."]}),"\n",(0,n.jsx)(e.admonition,{title:"Parameters",type:"tip",children:(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"rotor_position_expression"}),": ",(0,n.jsx)(e.code,{children:"str"})," A mathematical expression defining the initial rotor position."]}),"\n",(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:"rotor_position_unit"}),": ",(0,n.jsx)(e.code,{children:'Literal["deg", "rad"]'}),' The unit of the rotor position expression, either degrees ("deg") or radians ("rad").']}),"\n"]})}),"\n",(0,n.jsx)(e.h2,{id:"methods",children:"Methods"}),"\n",(0,n.jsxs)(e.table,{children:[(0,n.jsx)(e.thead,{children:(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.th,{children:"Method"}),(0,n.jsx)(e.th,{children:"Description"})]})}),(0,n.jsxs)(e.tbody,{children:[(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:"set_rotor_position(value, unit)"}),(0,n.jsxs)(e.td,{children:["Sets the rotor position expression with ",(0,n.jsx)(e.code,{children:"value: str | float"})," and ",(0,n.jsx)(e.code,{children:'unit: Literal["deg", "rad"]'}),"."]})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:"init_network()"}),(0,n.jsx)(e.td,{children:"Initializes the network settings for the analysis."})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:"init_time_functions()"}),(0,n.jsx)(e.td,{children:"Initializes the time functions for the analysis."})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:"save_json()"}),(0,n.jsx)(e.td,{children:"Saves the analysis data to a JSON file."})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:"purge_all()"}),(0,n.jsx)(e.td,{children:"Purges all the data in the analysis, resetting it to its default state."})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:"purge_solution()"}),(0,n.jsx)(e.td,{children:"Purges only the solution data in the analysis, keeping the input settings intact."})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:"run()"}),(0,n.jsx)(e.td,{children:"Executes the Back EMF analysis using the current input settings."})]}),(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:"validate()"}),(0,n.jsx)(e.td,{children:"Returns the validation status in dictionary format."})]})]})]}),"\n",(0,n.jsx)(e.h2,{id:"attributes",children:"Attributes"}),"\n",(0,n.jsxs)(e.table,{children:[(0,n.jsx)(e.thead,{children:(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.th,{children:"Attribute"}),(0,n.jsx)(e.th,{children:"Description"})]})}),(0,n.jsx)(e.tbody,{children:(0,n.jsxs)(e.tr,{children:[(0,n.jsx)(e.td,{children:(0,n.jsx)(e.code,{children:"rotor_position"})}),(0,n.jsxs)(e.td,{children:[(0,n.jsx)(e.code,{children:"float"})," The initial rotor position in ",(0,n.jsx)(e.code,{children:"deg"}),". ","\u26a0\ufe0f"," ",(0,n.jsx)(e.em,{children:"read-only"})]})]})})]})]})}function h(t={}){const{wrapper:e}={...(0,r.R)(),...t.components};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(l,{...t})}):l(t)}}}]);