"use strict";(self.webpackChunke_motor_solution_doc=self.webpackChunke_motor_solution_doc||[]).push([[1759],{4860:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>o,default:()=>l,frontMatter:()=>c,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"api/Machine/type/index","title":"type","description":"The type attribute of the MachineData class represents the type of the machine. In the GUI, this is displayed as a checkpoint.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/api/Machine/type/index.md","sourceDirName":"api/Machine/type","slug":"/api/Machine/type/","permalink":"/eMotorSolutionDoc/en/docs/api/Machine/type/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"type"},"sidebar":"apiSidebar","previous":{"title":"Machine","permalink":"/eMotorSolutionDoc/en/docs/api/Machine/"},"next":{"title":"set_machine_type()","permalink":"/eMotorSolutionDoc/en/docs/api/Machine/type/set_machine_type"}}');var s=n(4848),r=n(8453);const c={sidebar_position:1,title:"type"},o="type",h={},d=[{value:"Methods",id:"methods",level:2},{value:"Attributes",id:"attributes",level:2},{value:"Example Usage",id:"example-usage",level:2}];function a(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"type",children:"type"})}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"type"})," attribute of the ",(0,s.jsx)(t.a,{href:"/docs/api/Machine/",children:(0,s.jsx)(t.code,{children:"MachineData"})})," class represents the type of the machine. In the GUI, this is displayed as a ",(0,s.jsx)(t.a,{href:"/docs/docs/Machine/Type.md",children:"checkpoint"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["It is an instance of the ",(0,s.jsx)(t.code,{children:"MachineTypeData"})," class accessible through the ",(0,s.jsx)(t.code,{children:"eMotorSolution.CheckPoints.Machine.Type"})," module."]}),"\n",(0,s.jsx)(t.admonition,{title:"Parameters",type:"tip",children:(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"machine_type_init"}),": ",(0,s.jsx)(t.code,{children:"str"}),", The type data of the machine. defaults to ",(0,s.jsx)(t.code,{children:'"IPMSM"'}),"."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"pole_number_expression"}),": ",(0,s.jsx)(t.code,{children:"str"}),", The number of poles for the machine. defaults to ",(0,s.jsx)(t.code,{children:'"8"'}),"."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"topology_init"}),": ",(0,s.jsx)(t.code,{children:"str"}),", The topology of the machine. defaults to ",(0,s.jsx)(t.code,{children:'"Internal Rotor"'}),"."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"machine_name"}),": ",(0,s.jsx)(t.code,{children:"str"}),", The name of the machine. defaults to ",(0,s.jsx)(t.code,{children:'"My Machine"'}),"."]}),"\n"]})}),"\n",(0,s.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Method"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.a,{href:"/docs/api/Machine/type/set_machine_type.md",children:"set_machine_type"}),"(machine_type: str)"]}),(0,s.jsxs)(t.td,{children:["Sets the machine type to ",(0,s.jsx)(t.code,{children:'"IPMSM"'}),", ",(0,s.jsx)(t.code,{children:'"SPMSM"'}),", or ",(0,s.jsx)(t.code,{children:'"SynRM"'}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.a,{href:"/docs/api/Machine/type/set_pole_number.md",children:"set_pole_number"}),"(expression: int | str)"]}),(0,s.jsx)(t.td,{children:"Sets the number of poles for the machine."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.a,{href:"/docs/api/Machine/type/set_topology.md",children:"set_topology"}),"(topology: str)"]}),(0,s.jsxs)(t.td,{children:["Sets the machine topology to ",(0,s.jsx)(t.code,{children:'"Internal Rotor"'})," or ",(0,s.jsx)(t.code,{children:'"External Rotor"'}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"validate()"}),(0,s.jsx)(t.td,{children:"Returns the validation status in dictionary format."})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"attributes",children:"Attributes"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Attribute"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"machine_type"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.code,{children:"str"})," The type of the machine (",(0,s.jsx)(t.code,{children:'"IPMSM"'}),", ",(0,s.jsx)(t.code,{children:'"SPMSM"'})," or ",(0,s.jsx)(t.code,{children:'"SynRM"'}),"). ","\u26a0\ufe0f"," ",(0,s.jsx)(t.em,{children:"read-only"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"pole_number"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.code,{children:"int"})," The number of poles in the machine. ","\u26a0\ufe0f"," ",(0,s.jsx)(t.em,{children:"read-only"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"topology"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.code,{children:"str"})," The topology of the machine (",(0,s.jsx)(t.code,{children:'"Internal Rotor"'})," or ",(0,s.jsx)(t.code,{children:'"External Rotor"'}),"). ","\u26a0\ufe0f"," ",(0,s.jsx)(t.em,{children:"read-only"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"machine_name"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.code,{children:"str"})," The name of the machine."]})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"example-usage",children:"Example Usage"}),"\n",(0,s.jsxs)(t.p,{children:["Here is an example of how to access and modify some of the attributes and methods of the ",(0,s.jsx)(t.code,{children:"MachineTypeData"})," class:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'import emotorsolution as ems\r\n\r\n# Load an existing project\r\nproject = ems.load_project("path/to/your/project.json")\r\n\r\n# Access the machine type\r\nprint(project.machine.type.machine_type)\r\n>> "IPMSM"\r\n\r\n# Modify the machine type\r\nproject.machine.type.set_machine_type("SPMSM")\r\n\r\n# Access the machine name\r\nprint(project.machine.type.machine_name)\r\n>> "My Machine"\r\n\r\n# Modify the machine name\r\nproject.machine.type.machine_name = "New Machine Name"\r\n\r\n# Access the modified machine name\r\nprint(project.machine.type.machine_name)\r\n>> "New Machine Name"\n'})})]})}function l(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>o});var i=n(6540);const s={},r=i.createContext(s);function c(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);