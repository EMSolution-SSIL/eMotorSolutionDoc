"use strict";(self.webpackChunke_motor_solution_doc=self.webpackChunke_motor_solution_doc||[]).push([[1918],{3346:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>s,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"docs/Machine/Type","title":"Type","description":"Machine Type","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/docs/Machine/Type.md","sourceDirName":"docs/Machine","slug":"/docs/Machine/Type","permalink":"/eMotorSolutionDoc/en/docs/docs/Machine/Type","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Type"},"sidebar":"docsSidebar","previous":{"title":"\u6a5f\u68b0(Machine)","permalink":"/eMotorSolutionDoc/en/docs/category/\u6a5f\u68b0machine"},"next":{"title":"Dimension","permalink":"/eMotorSolutionDoc/en/docs/docs/Machine/Dimension"}}');var i=o(4848),r=o(8453);const s={sidebar_position:1,title:"Type"},c="Type Checkpoint",a={},l=[{value:"Machine Type",id:"machine-type",level:2},{value:"Pole Number",id:"pole-number",level:2},{value:"Topology",id:"topology",level:2},{value:"Machine Name",id:"machine-name",level:2}];function h(e){const n={admonition:"admonition",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"type-checkpoint",children:"Type Checkpoint"})}),"\n",(0,i.jsx)(n.h2,{id:"machine-type",children:"Machine Type"}),"\n",(0,i.jsx)(n.p,{children:"Currently, the software supports three types of machines:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"IPMSM"}),": Interior Permanent Magnet Synchronous Motor"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"SPMSM"}),": Surface Permanent Magnet Synchronous Motor"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"SynRM"}),": Synchronous Reluctance Motor"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"pole-number",children:"Pole Number"}),"\n",(0,i.jsx)(n.p,{children:"The pole number is the number of magnetic poles in the machine."}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"Pole number should be a positive even number."})}),"\n",(0,i.jsx)(n.h2,{id:"topology",children:"Topology"}),"\n",(0,i.jsxs)(n.p,{children:["The topology of the machine can be either ",(0,i.jsx)(n.strong,{children:"Internal Rotor"})," or ",(0,i.jsx)(n.strong,{children:"External Rotor"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"machine-name",children:"Machine Name"}),"\n",(0,i.jsx)(n.p,{children:"The machine name is a user-defined string that identifies the machine. It can be any alphanumeric string, including spaces and special characters. The name is used to label the machine in the project tree and in the output files."})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>c});var t=o(6540);const i={},r=t.createContext(i);function s(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);