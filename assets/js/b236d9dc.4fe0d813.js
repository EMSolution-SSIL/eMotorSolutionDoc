"use strict";(self.webpackChunke_motor_solution_doc=self.webpackChunke_motor_solution_doc||[]).push([[7526],{4886:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>a,frontMatter:()=>s,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"api/Rotor/SynRM/index","title":"SynRM","description":"The hole attribute of the Project.rotor corresponds to the Rotor Hole CheckPoint in the GUI. It is an instance of the SynRMHoleData class, which can be accessed through eMotorSolution.CheckPoints.Rotor.SynRMHole.","source":"@site/docs/api/Rotor/SynRM/index.md","sourceDirName":"api/Rotor/SynRM","slug":"/api/Rotor/SynRM/","permalink":"/eMotorSolutionDoc/docs/api/Rotor/SynRM/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"SynRM"},"sidebar":"apiSidebar","previous":{"title":"Halbach Array","permalink":"/eMotorSolutionDoc/docs/api/Rotor/SPMSM/SlotM19"},"next":{"title":"Type 54","permalink":"/eMotorSolutionDoc/docs/api/Rotor/SynRM/Type54"}}');var r=o(4848),i=o(8453);const s={sidebar_position:3,title:"SynRM"},l="SynRM Hole",c={},h=[{value:"Methods",id:"methods",level:2},{value:"Attributes",id:"attributes",level:2},{value:"Example Usage",id:"example-usage",level:2}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"synrm-hole",children:"SynRM Hole"})}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"hole"})," attribute of the ",(0,r.jsx)(t.a,{href:"/docs/api/Rotor",children:(0,r.jsx)(t.code,{children:"Project.rotor"})})," corresponds to the ",(0,r.jsx)(t.a,{href:"/docs/docs/Rotor/Hole",children:"Rotor Hole CheckPoint"})," in the GUI. It is an instance of the ",(0,r.jsx)(t.code,{children:"SynRM_HoleData"})," class, which can be accessed through ",(0,r.jsx)(t.code,{children:"eMotorSolution.CheckPoints.Rotor.SynRM_Hole"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["It holds the properties of all rotor hole pairs in the ",(0,r.jsx)(t.code,{children:"collection"})," list. Adding or removing hole pairs is simply done by appending or removing items from this list."]}),"\n",(0,r.jsx)(t.admonition,{title:"Parameters",type:"tip",children:(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"_collection"}),": ",(0,r.jsx)(t.code,{children:"list"})," A list of hole pairs."]}),"\n"]})}),"\n",(0,r.jsx)(t.h1,{id:"hole-pair",children:"Hole Pair"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"./Type54",children:"Type 54"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.a,{href:"./Type61",children:"Type 61"})}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Method"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"validate()"}),(0,r.jsx)(t.td,{children:"Returns the validation status in dictionary format."})]})})]}),"\n",(0,r.jsx)(t.h2,{id:"attributes",children:"Attributes"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Attribute"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"collection"}),(0,r.jsxs)(t.td,{children:[(0,r.jsx)(t.code,{children:"list"})," Returns the list of hole-magnet pairs."]})]})})]}),"\n",(0,r.jsx)(t.h2,{id:"example-usage",children:"Example Usage"}),"\n",(0,r.jsx)(t.p,{children:"Assuming that the project is an SynRM one:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:'import eMotorSolution as ems\r\n\r\nfrom eMotorSolution.CheckPoints.Rotor.SynRM.SYN_HoleM61Data import SYN_HoleM61Data\r\n\r\n# Load the project\r\nproject = ems.load_project("path/to/your/project.json")\r\n\r\n# Print the list of current Holes\r\nprint(project.rotor.hole.collection)\r\n\r\n# Create a new Hole\r\nnew_hole = SYN_HoleM61Data(\r\n    W0_expression=30,\r\n    W0_unit="mm",\r\n    W3_expression=6,\r\n    W3_unit="mm",\r\n    H0_expression=3,\r\n    H0_unit="mm",\r\n    H1_expression=9,\r\n    H1_unit="mm",\r\n    H2_expression=1,\r\n    H2_unit="mm",\r\n)\r\n# Make sure to set the project data to get hints and proper validation\r\nnew_hole.project_data = project\r\n\r\n\r\n# Add the new hole to the project\r\nproject.rotor.hole.collection.append(new_hole)\r\n\r\nhints = new_hole.hints  # Get hint Values\r\nprint(hints)\r\n\r\nproject.show()\n'})})]})}function a(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>s,x:()=>l});var n=o(6540);const r={},i=n.createContext(r);function s(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);